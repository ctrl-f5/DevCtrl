<?php use DevCtrl\Domain\Item\Property\Type\TypeInterface; ?>
<?php use DevCtrl\Domain\Item\Property\ValuesProvider\ProviderInterface as ValuesProvider; ?>
<?php use Ctrl\Form\Form; ?>
<?php $type = $this->type; /** @var $type TypeInterface */ ?>
<?php $valuesProviders = $this->valuesProviders; /** @var $valuesProviders ValuesProvider[] */ ?>
<?php $form = $this->form; /** @var $form Form */ ?>

<?php echo $this->pageTitle('New property', $type->getRepresentedPorpertyType()); ?>

<?php
    echo $this->ctrlForm()->start($form->setLabel('Please provide some info'));

    foreach ($form->getElements() as $e) {
        $containerOptions = array();
        if (0 === strpos($e->getName(), 'type-config')) {
            $containerOptions['class'] = array(
                $e->getAttribute('data-name'),
                'type-config'
            );
        }
        echo $this->ctrlFormInput($e, $containerOptions);
    }

    echo $this->ctrlFormActions(array(
        $this->ctrlButton('submit', array('value' => 'save'), 'primary'),
        $this->ctrlButton('link', array('value' => 'cancel', 'href' => $form->getReturnUrl()))
    ));

    echo $this->ctrlForm()->end($form);
?>

<script type="text/javascript">
    $(function () {
        $('select[name=type]').live('change', function () {
            $('#form-property-create .type-config').hide();
            $('#form-property-create .type-config.'+$(this).val()).show();
        }).trigger('change');
    });
</script>