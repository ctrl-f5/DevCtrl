<?php use DevCtrl\Domain\Item\Property\Type\TypeInterface; ?>
<?php use DevCtrl\Domain\Item\Property\ValuesProvider\ProviderInterface as ValuesProvider; ?>
<?php use Ctrl\Form\Form; ?>
<?php $type = $this->type; /** @var $type TypeInterface */ ?>
<?php $valuesProviders = $this->valuesProviders; /** @var $valuesProviders ValuesProvider[] */ ?>
<?php $form = $this->form; /** @var $form Form */ ?>
<h1>New property</h1>

<form class="form-horizontal ctrljs-validate" method="post" id="form-property" action="<?php echo $this->url('property_create', array(
    'type' => $type->getRepresentedPorpertyType(),
)); ?>">
    <fieldset>
        <legend><?php echo $type->getRepresentedPorpertyType(); ?> property</legend>
        <?php
        foreach ($form->getElements() as $e) {
            $containerOptions = array();
            if (0 === strpos($e->getName(), 'type-config')) {
                $containerOptions['class'] = array(
                    $e->getAttribute('data-name'),
                    'type-config'
                );
            }
            echo $this->ctrlFormInput($e, $containerOptions);
        }
        ?>
        <div class="form-actions">
            <input type="submit" class="btn btn-primary" value="save">
            <a class="btn" href="<?php echo $form->getReturnurl(); ?>">cancel</a>
        </div>
    </fieldset>

</form>


<script type="text/javascript">
    $(function () {
        $('select[name=type]').live('change', function () {
            $('#form-property .type-config').hide();
            $('#form-property .type-config.'+$(this).val()).show();
        }).trigger('change');

        $('form#item-type-state-form').live('submit', function () {
            if (Ctrl.forms().isValid($(this))) {
                $('form#item-form .form-actions .alert').remove();
            } else {
                $('form#item-form .form-actions').prepend(
                    $('<div class="alert alert-error"><strong>Hold on!</strong> Some required fields are missing a value.</div>')
                );
                return false;
            }
            return true;
        });
    });
</script>